<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C语言小游戏-扫雷的实现</title>
      <link href="/2023/08/02/2023-08-02/"/>
      <url>/2023/08/02/2023-08-02/</url>
      
        <content type="html"><![CDATA[<div class="note warning simple"><p>本文参考视频: <a href="https://www.bilibili.com/video/BV1it411d7N3?p=1">【C语言扫雷游戏开发】月入上万大牛手把手教你开发扫雷小游戏！非黑窗口，唯美界面版！</a> </p></div><div class="note warning simple"><p>图片音频素材获取: 链接:<a href="https://pan.baidu.com/s/1rU-h1E2DBF0bbjR1fL1kww?pwd=kita">https://pan.baidu.com/s/1rU-h1E2DBF0bbjR1fL1kww?pwd=kita</a> 提取码:kita </p></div><h2 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1.准备工作"></a>1.准备工作</h2><h3 id="1-1-EasyX图形库的下载"><a href="#1-1-EasyX图形库的下载" class="headerlink" title="1.1 EasyX图形库的下载"></a>1.1 EasyX图形库的下载</h3><p>我们前往<a href="https://easyx.cn/">EasyX官网</a>，可以看到红色的”下载EasyX”，点击下载。之后运行下载的.exe文件，点击下一步，会出现安装导向界面。在安装导向界面中EasyX会自动检测出你的Visual C++版本（比如我的就是2022版），找到对应的版本点击安装即可。<img src="/img/3.png" alt=""><div class="note info simple"><p>EasyX图形库是针对Visual C++的图形库，仅支持微软的VS，不支持其他编译器。更具体的VS安装和EasyX安装教程可自行在网上搜索。</p></div></p><h3 id="1-2-将图片等素材添加至工程"><a href="#1-2-将图片等素材添加至工程" class="headerlink" title="1.2 将图片等素材添加至工程"></a>1.2 将图片等素材添加至工程</h3><p>打开VS，点击创建新工程，创建一个空项目，名称和存储位置任意。在解决方案资源管理器中右键点击下图所示位置，点击”在文件资源管理器中打开文件夹”，将我们的图片和音频素材复制粘贴到打开的文件夹。<details class="folding-tag" red><summary> 查看图片 </summary>              <div class='content'>              <p><img src="/img/1.png" alt="">，<img src="/img/2.png" alt=""></p>              </div>            </details></p><h3 id="1-3-游戏规则"><a href="#1-3-游戏规则" class="headerlink" title="1.3 游戏规则"></a>1.3 游戏规则</h3><p>可以前往此<a href="http://www.minesweeper.cn/">网页</a>游玩扫雷游戏，了解扫雷游戏的相关规则和操作。</p><h2 id="2-游戏实现"><a href="#2-游戏实现" class="headerlink" title="2.游戏实现"></a>2.游戏实现</h2><h3 id="2-1-创建文件"><a href="#2-1-创建文件" class="headerlink" title="2.1 创建文件"></a>2.1 创建文件</h3><p>在之前创建的工程项目中，我们在源文件创建一个.cpp文件，注意是.cpp文件，但我们仍可以用C语言编程。<br>我们先引入以下头文件:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;graphics.h&gt;</span> <span class="comment">// 这个头文件包含EasyX的相关函数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br></pre></td></tr></table></figure></p><h3 id="2-2-棋盘-扫雷界面-的初始化和打印"><a href="#2-2-棋盘-扫雷界面-的初始化和打印" class="headerlink" title="2.2 棋盘(扫雷界面)的初始化和打印"></a>2.2 棋盘(扫雷界面)的初始化和打印</h3><p>将扫雷界面看成一个n*n的矩阵，则我们可以用一个int类型的二维数组来表示这个界面，在初始化过程中，用0来表示并赋值非雷元素，-1表示并赋值雷元素，这个雷元素的位置是随机布置的。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 相关宏定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROW 10 <span class="comment">// 棋盘的行数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COL 10 <span class="comment">// 棋盘的列数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NUM 10 <span class="comment">// 棋盘的雷数</span></span></span><br><span class="line"><span class="comment">// 初始化棋盘</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">game_init</span><span class="params">(<span class="type">int</span> board[ROW][COL])</span> <span class="comment">// 这是游戏初始化函数的定义</span></span><br><span class="line">&#123;</span><br><span class="line">srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>)); <span class="comment">// 初始化随机数种子</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ROW; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; COL; ++j)</span><br><span class="line">&#123;</span><br><span class="line">board[i][j] = <span class="number">0</span>; <span class="comment">// 全部赋值为0</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment">// rand()函数返回一个随机值</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; NUM; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = rand() % ROW; <span class="comment">// 雷的行标 取值在0~ROW-1</span></span><br><span class="line"><span class="type">int</span> y = rand() % COL; <span class="comment">// 雷的列标 取值在0~COL-1</span></span><br><span class="line">        <span class="comment">// 为避免循环过程产生相同的xy组合，赋值给已被赋值为-1的元素，加入如下判断</span></span><br><span class="line"><span class="keyword">if</span>(board[x][y] != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">board[x][y] = <span class="number">-1</span>; <span class="comment">// 随机到不是雷的元素则赋值给雷</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">--i; <span class="comment">// 随机到已被赋值为雷的元素则不再赋值，i减1继续循环</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>但对于不是雷的元素，其数字应表示为周围格子中雷的个数。通常是计算以其为中心的九宫格中其他八个格子中雷的总个数，对于第i行第j列的非雷元素而言，就是用两层for循环从i-1行到i+1行，从j-1列到j+1列遍历，遇到值为-1的格子就使其（图中黄色格子）加一。<br><details class="folding-tag" ><summary> 查看图片 </summary>              <div class='content'>              <p><img src="/img/4.png" alt=""></p>              </div>            </details><br>但对于首行首列或是尾行尾列的元素，则不能这么计算，因为以它们为中心的九宫格存在越界的情况。<br>所以为避免这种错误，我们有两种方法:</p><blockquote><p>1.通过if语句避免越界访问数组。<br>2.扩大数组，将数组向上向下各扩展一行，列如此，将它们均赋值为0，但不打印，仅将原来的行和列作为棋盘元素。于是数组变为(ROW+2)行(COL+2)列的数组了，这样对于任意一个棋盘格，以其为中心的九宫格就不存在越界的问题,同时赋值为0的操作也不会妨碍计算周围的雷的个数。注意此时main函数中定义的数组其行和列应变为ROW+2和COL+2。<br><div class="tabs" id="un"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#un-1">方法1</button></li><li class="tab"><button type="button" data-href="#un-2">方法2</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="un-1"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 计算非雷元素周围雷的个数并赋值</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ROW; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; COL; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> m = i - <span class="number">1</span>; m &lt;= i + <span class="number">1</span>; ++m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> n = j - <span class="number">1</span>; n &lt;= j + <span class="number">1</span>; ++n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[i][j] != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m != <span class="number">-1</span> &amp;&amp; m != ROW &amp;&amp; n != <span class="number">-1</span> &amp;&amp; n != COL &amp;&amp; board[m][n] == <span class="number">-1</span>)</span><br><span class="line"><span class="comment">// 一旦某个行标或列标越界，则短路特性不会引起数组越界访问</span></span><br><span class="line">&#123;</span><br><span class="line">++board[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="un-2"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 计算非雷元素周围雷的个数并赋值</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= ROW; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= COL; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> m = i - <span class="number">1</span>; m &lt;= i + <span class="number">1</span>; ++m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> n = j - <span class="number">1</span>; n &lt;= j + <span class="number">1</span>; ++n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[i][j] != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[m][n] == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">++board[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p></blockquote><p>将初始化函数封装在<code>game_init</code>函数中。<br><div class="tabs" id="un2"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#un2-1">方法1</button></li><li class="tab"><button type="button" data-href="#un2-2">方法2</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="un2-1"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">game_init</span><span class="params">(<span class="type">int</span> board[ROW][COL])</span></span><br><span class="line">&#123;</span><br><span class="line">srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>)); <span class="comment">// 初始化随机数种子</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ROW; ++i) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; COL; ++j)</span><br><span class="line">&#123;</span><br><span class="line">board[i][j] = <span class="number">0</span>; <span class="comment">// 所有元素赋值为0</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; NUM; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = rand() % ROW; <span class="comment">// 雷的行标 取值0~ROW-1</span></span><br><span class="line"><span class="type">int</span> y = rand() % COL; <span class="comment">// 雷的列标 取值0~COL-1</span></span><br><span class="line"><span class="keyword">if</span> (board[x][y] != <span class="number">-1</span>) <span class="comment">// 避免多次将同一个位置赋值为-1</span></span><br><span class="line">&#123;</span><br><span class="line">board[x][y] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">--i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ROW; ++i) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; COL; ++j) <span class="comment">// 计算某个格子周围雷的个数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> m = i - <span class="number">1</span>; m &lt;= i + <span class="number">1</span>; ++m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> n = j - <span class="number">1</span>; n &lt;= j + <span class="number">1</span>; ++n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[i][j] != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m != <span class="number">-1</span> &amp;&amp; m != ROW &amp;&amp; n != <span class="number">-1</span> &amp;&amp; n != COL &amp;&amp; board[m][n] == <span class="number">-1</span>)</span><br><span class="line"><span class="comment">// 一旦某个行标或列标越界，则短路特性不会引起数组越界访问</span></span><br><span class="line">&#123;</span><br><span class="line">++board[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="un2-2"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">game_init</span><span class="params">(<span class="type">int</span> board[ROW + <span class="number">2</span>][COL + <span class="number">2</span>])</span> <span class="comment">// 此时数组扩大两行两列</span></span><br><span class="line">&#123;</span><br><span class="line">srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>)); <span class="comment">// 初始化随机数种子</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ROW + <span class="number">2</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; COL + <span class="number">2</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line">board[i][j] = <span class="number">0</span>; <span class="comment">// 全部元素(包括首行首列尾行尾列)赋值为0</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; NUM; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = rand() % ROW + <span class="number">1</span>; <span class="comment">// 雷的行标 取值1~ROW 不包括首行或尾行对应的下标(0或ROW+1)</span></span><br><span class="line"><span class="type">int</span> y = rand() % COL + <span class="number">1</span>; <span class="comment">// 雷的列标 取值1~COL 不包括首列或尾列对应的下标(0或COL+1)</span></span><br><span class="line"><span class="keyword">if</span> (board[x][y] != <span class="number">-1</span>) <span class="comment">// 防止多次赋值同一个元素为-1</span></span><br><span class="line">&#123;</span><br><span class="line">board[x][y] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">--i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= ROW; ++i) <span class="comment">// 不考虑计算最外围的行或者列的元素周围的雷的个数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= COL; ++j) <span class="comment">// 计算某个格子周围雷的数量</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> m = i - <span class="number">1</span>; m &lt;= i + <span class="number">1</span>; ++m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> n = j - <span class="number">1</span>; n &lt;= j + <span class="number">1</span>; ++n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[i][j] != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[m][n] != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">++board[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><br>最后在创建一个<code>game_print</code>函数，来打印棋盘。<br>最终得到如下代码:<br><div class="tabs" id="un3"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#un3-1">方法1</button></li><li class="tab"><button type="button" data-href="#un3-2">方法2</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="un3-1"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;graphics.h&gt;</span> <span class="comment">// 这个头文件包含easyx的相关函数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="comment">// 相关宏定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROW 10 <span class="comment">// 棋盘的行数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COL 10 <span class="comment">// 棋盘的列数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NUM 10 <span class="comment">// 棋盘的雷数</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">game_init</span><span class="params">(<span class="type">int</span> board[ROW][COL])</span></span><br><span class="line">&#123;</span><br><span class="line">srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>)); <span class="comment">// 初始化随机数种子</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ROW; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; COL; ++j)</span><br><span class="line">&#123;</span><br><span class="line">board[i][j] = <span class="number">0</span>; <span class="comment">// 所有元素赋值为0</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; NUM; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = rand() % ROW; <span class="comment">// 雷的行标 取值0~row-1</span></span><br><span class="line"><span class="type">int</span> y = rand() % COL; <span class="comment">// 雷的列标 取值0~col-1</span></span><br><span class="line"><span class="keyword">if</span> (board[x][y] != <span class="number">-1</span>) <span class="comment">// 避免多次将同一个位置赋值为-1</span></span><br><span class="line">&#123;</span><br><span class="line">board[x][y] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">--i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ROW; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; COL; ++j) <span class="comment">// 计算某个格子周围雷的个数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> m = i - <span class="number">1</span>; m &lt;= i + <span class="number">1</span>; ++m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> n = j - <span class="number">1</span>; n &lt;= j + <span class="number">1</span>; ++n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[i][j] != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m != <span class="number">-1</span> &amp;&amp; m != ROW &amp;&amp; n != <span class="number">-1</span> &amp;&amp; n != COL &amp;&amp; board[m][n] == <span class="number">-1</span>)</span><br><span class="line"><span class="comment">// 一旦某个行标或列标越界，则短路特性不会引起数组越界访问</span></span><br><span class="line">&#123;</span><br><span class="line">++board[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">game_print</span><span class="params">(<span class="type">int</span> board[ROW][COL])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ROW; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; COL; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%2d &quot;</span>, board[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> board[ROW][COL];</span><br><span class="line">game_init(board);</span><br><span class="line">game_print(board);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="un3-2"><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;graphics.h&gt;</span> <span class="comment">// 这个头文件包含EasyX的相关函数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="comment">// 相关宏定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROW 10 <span class="comment">// 棋盘的行数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COL 10 <span class="comment">// 棋盘的列数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NUM 10 <span class="comment">// 棋盘的雷数</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">game_init</span><span class="params">(<span class="type">int</span> board[ROW + <span class="number">2</span>][COL + <span class="number">2</span>])</span> <span class="comment">// 此时数组扩大两行两列</span></span><br><span class="line">&#123;</span><br><span class="line">srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>)); <span class="comment">// 初始化随机数种子</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ROW + <span class="number">2</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; COL + <span class="number">2</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line">board[i][j] = <span class="number">0</span>; <span class="comment">// 全部元素(包括首行首列尾行尾列)赋值为0</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; NUM; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = rand() % ROW + <span class="number">1</span>; <span class="comment">// 雷的行标 取值1~ROW 不包括首行或尾行对应的下标(0或ROW+1)</span></span><br><span class="line"><span class="type">int</span> y = rand() % COL + <span class="number">1</span>; <span class="comment">// 雷的列标 取值1~COL 不包括首列或尾列对应的下标(0或COL+1)</span></span><br><span class="line"><span class="keyword">if</span> (board[x][y] != <span class="number">-1</span>) <span class="comment">// 防止多次赋值同一个元素为-1</span></span><br><span class="line">&#123;</span><br><span class="line">board[x][y] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">--i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= ROW; ++i) <span class="comment">// 不考虑计算最外围的行或者列的元素周围的雷的个数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= COL; ++j) <span class="comment">// 计算某个格子周围雷的数量</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> m = i - <span class="number">1</span>; m &lt;= i + <span class="number">1</span>; ++m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> n = j - <span class="number">1</span>; n &lt;= j + <span class="number">1</span>; ++n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[i][j] != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[m][n] == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">++board[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">game_print</span><span class="params">(<span class="type">int</span> board[ROW + <span class="number">2</span>][COL + <span class="number">2</span>])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= ROW; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= COL; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%2d &quot;</span>, board[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> board[ROW + <span class="number">2</span>][COL + <span class="number">2</span>];</span><br><span class="line">game_init(board);</span><br><span class="line">game_print(board);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div></p><h3 id="2-3-图形化界面"><a href="#2-3-图形化界面" class="headerlink" title="2.3 图形化界面"></a>2.3 图形化界面</h3><p>在宏定义下添加如下代码，注意去掉加号<br><div class="note info simple"><p>之后的代码仅针对方法1， 方法2的代码修改明细可以查看之后的代码注释</p></div><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;graphics.h&gt;</span> <span class="comment">// 这个头文件包含easyx的相关函数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="comment">// 相关宏定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROW 10 <span class="comment">// 棋盘的行数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COL 10 <span class="comment">// 棋盘的列数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NUM 10 <span class="comment">// 棋盘的雷数</span></span></span><br><span class="line">+ <span class="meta">#<span class="keyword">define</span> SIZE 50 <span class="comment">// 图片的大小 这里定义为50*50</span></span></span><br><span class="line">+ IMAGE img[<span class="number">12</span>];  <span class="comment">// 创建12个图像对象</span></span><br></pre></td></tr></table></figure><br>在<code>main</code>函数添加如下代码，去掉加号，注意这里如果采用方法2，要将数组行列大小改为<code>ROW+2</code>和<code>COL+2</code><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">+HWND hwnd = initgraph(<span class="number">500</span>, <span class="number">500</span>, SHOWCONSOLE); <span class="comment">// 初始化图形窗口，大小为500*500，其原点在左上角，x轴向右为正，y轴向下为正</span></span><br><span class="line">+loadimage(&amp;img[<span class="number">0</span>], <span class="string">L&quot;0.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字0</span></span><br><span class="line">+loadimage(&amp;img[<span class="number">1</span>], <span class="string">L&quot;1.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字1</span></span><br><span class="line">+loadimage(&amp;img[<span class="number">2</span>], <span class="string">L&quot;2.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字2</span></span><br><span class="line">+loadimage(&amp;img[<span class="number">3</span>], <span class="string">L&quot;3.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字3</span></span><br><span class="line">+loadimage(&amp;img[<span class="number">4</span>], <span class="string">L&quot;4.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字4</span></span><br><span class="line">+loadimage(&amp;img[<span class="number">5</span>], <span class="string">L&quot;5.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字5</span></span><br><span class="line">+loadimage(&amp;img[<span class="number">6</span>], <span class="string">L&quot;6.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字6</span></span><br><span class="line">+loadimage(&amp;img[<span class="number">7</span>], <span class="string">L&quot;7.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字7</span></span><br><span class="line">+loadimage(&amp;img[<span class="number">8</span>], <span class="string">L&quot;8.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字8</span></span><br><span class="line">+loadimage(&amp;img[<span class="number">9</span>], <span class="string">L&quot;9.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 雷</span></span><br><span class="line">+loadimage(&amp;img[<span class="number">10</span>], <span class="string">L&quot;10.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 未打开时的方块图片</span></span><br><span class="line">+loadimage(&amp;img[<span class="number">11</span>], <span class="string">L&quot;11.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 标记</span></span><br><span class="line"><span class="type">int</span> board[ROW][COL]; <span class="comment">// 如果是方法2，将其改为int board[ROW + 2][COL + 2]</span></span><br><span class="line">game_init(board);</span><br><span class="line">game_print(board);</span><br><span class="line">+<span class="keyword">while</span> (<span class="number">1</span>); <span class="comment">// 死循环防止运行程序后界面迅速消失</span></span><br><span class="line">+closegraph(); <span class="comment">// 关闭图形化窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><br>将<code>game_print</code>修改为如下函数:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">game_print</span><span class="params">(<span class="type">int</span> board[ROW][COL])</span></span><br><span class="line"><span class="comment">// 方法2: void game_print(int board[ROW + 2][COL + 2])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ROW; ++i)</span><br><span class="line"><span class="comment">// 方法2: for (int i = 1; i &lt;= ROW; ++i)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; COL; ++j)</span><br><span class="line">     <span class="comment">// 方法2: for (int j = 1; j &lt;= COL; ++j)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%2d &quot;</span>, board[i][j]);</span><br><span class="line"><span class="keyword">if</span> (board[i][j] == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">putimage(j * SIZE, i * SIZE, &amp;img[<span class="number">9</span>]); <span class="comment">// 如果是雷 则加载雷图片</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (board[i][j] &gt;= <span class="number">0</span> &amp;&amp; board[i][j] &lt;= <span class="number">8</span>)</span><br><span class="line">&#123;</span><br><span class="line">putimage(j * SIZE, i * SIZE, &amp;img[board[i][j]]); <span class="comment">// 如果不是雷 则加载数字</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (board[i][j] &gt;= <span class="number">19</span> &amp;&amp; board[i][j] &lt;= <span class="number">28</span>) </span><br><span class="line">&#123;</span><br><span class="line">putimage(j * SIZE, i * SIZE, &amp;img[<span class="number">10</span>]); <span class="comment">// 未点开方块时 则加载空白方块</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (board[i][j] &gt; <span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line">putimage(j * SIZE, i * SIZE, &amp;img[<span class="number">11</span>]); <span class="comment">// 右键点击 则加载旗帜图片</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>putimage</code>函数的前两个参数表示其图片左上角的横纵坐标，我们要让图片按行再按列排序，以保证和打印的命令行窗口数字对应一致，同时要保证图片充分显示和紧邻，坐标乘以<code>SIZE</code>。<br>此时可以通过运行程序来检验其正确性。</p><h3 id="2-4-加密图形"><a href="#2-4-加密图形" class="headerlink" title="2.4 加密图形"></a>2.4 加密图形</h3><p>未开始游戏时，图片都是空白的方块，即图片<code>10.jpg</code>。我们如果想要在打印时显示这个图片，就得进行适当的加密。<br>我们知道所有格子的初始值都在-1到8之间，如果初始化时再给每个格子加20，每个格子取值就在19~28之间，当我们打印时，如果检测到该格子的值在19~28之间，则输出图片10，之前的<code>game_print</code>函数已经包含了这种情况。所以我们只需在<code>game_init</code>函数添加如下代码:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ROW; ++i)</span><br><span class="line"><span class="comment">//方法2: for (int i = 1; i &lt;= ROW; ++i)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; COL; ++j)</span><br><span class="line"><span class="comment">//方法2: for (int j = 1; j &lt;= COL; ++j&gt;)</span></span><br><span class="line">&#123;</span><br><span class="line">board[i][j] += <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>左键点击空白方块，则会显示其原来的图片，所以我们需要定义一个鼠标消息。同时，鼠标右键会标记未被打开的方块，取消标记已被标记的方块。同上面的加密方式一样，如果检测到鼠标右键某个空白方块，则其值30，如果已被标记则其值30。每次这样执行一个鼠标消息，我们就调用一次<code>game_print</code>函数。将实现代码封装在<code>play</code>函数中。<br><code>play</code>函数还将有一个返回值，用来返回鼠标进行点击操作后对应格子存储的值，当其返回值为-1时，说明点到雷了，游戏结束。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">play</span><span class="params">(<span class="type">int</span> board[ROW][COL])</span></span><br><span class="line"><span class="comment">// 方法2: int play(int board[ROW + 2[COL + 2])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 定义一个消息</span></span><br><span class="line">ExMessage m;</span><br><span class="line"><span class="type">int</span> x, y; <span class="comment">// 接收鼠标消息的横纵坐标对应的数组下标</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">m = getmessage(EX_MOUSE); <span class="comment">// m接收鼠标消息</span></span><br><span class="line"><span class="keyword">switch</span> (m.message)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> WM_LBUTTONDOWN: <span class="comment">// 如果左键点击 翻开空白图片</span></span><br><span class="line">x = m.y / SIZE;         <span class="comment">// 对应的行标</span></span><br><span class="line">            <span class="comment">//方法2: x = m.y / SIZE + 1;</span></span><br><span class="line">y = m.x / SIZE;         <span class="comment">// 对应的列标</span></span><br><span class="line">            <span class="comment">//方法2: y = m.x / SIZE + 1;</span></span><br><span class="line"><span class="keyword">if</span> (board[x][y] &gt;= <span class="number">19</span> &amp;&amp; board[x][y] &lt;= <span class="number">28</span>)</span><br><span class="line">&#123;</span><br><span class="line">board[x][y] -= <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> board[x][y];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WM_RBUTTONDOWN: <span class="comment">// 如果右键点击 标记或取消标记</span></span><br><span class="line">x = m.y / SIZE; <span class="comment">// 对应的行标</span></span><br><span class="line"><span class="comment">//方法2: x = m.y / SIZE + 1;</span></span><br><span class="line">y = m.x / SIZE; <span class="comment">// 对应的列标</span></span><br><span class="line"><span class="comment">//方法2: y = m.x / SIZE + 1;</span></span><br><span class="line"><span class="keyword">if</span> (board[x][y] &gt;= <span class="number">19</span> &amp;&amp; board[x][y] &lt;= <span class="number">28</span>)</span><br><span class="line">&#123;</span><br><span class="line">board[x][y] += <span class="number">30</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (board[x][y] &gt; <span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line">board[x][y] -= <span class="number">30</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> board[x][y];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>此时我们将<code>main</code>函数中的<code>while(1);</code>循环改为如下代码,并删除循环外调用的<code>game_print</code>函数:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">game_print(board);</span><br><span class="line"><span class="keyword">if</span> (play(board) == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">game_print(board);</span><br><span class="line">MessageBox(hwnd, <span class="string">L&quot;you have losted!&quot;</span>, <span class="string">L&quot;&quot;</span>, MB_OK); <span class="comment">// 如果踩雷 弹处窗口&quot;you have losted&quot;，游戏结束</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="2-5-完善功能"><a href="#2-5-完善功能" class="headerlink" title="2.5 完善功能"></a>2.5 完善功能</h3><p>扫雷游戏同样还有游戏成功的情况，我们可以定义一个全局变量count，每当玩家打开一个非雷格子就加1，这样当它的值<br>等于<code>ROW*COL - NUM</code>(总格子数 - 雷的个数)时，游戏判断胜利。<br>不过扫雷还有两个功能未完成，就是一旦打开数字为0的格子应该同时将其周围的格子打开，打开的格子若有为0的格子则继续打开(递归)，这里就用<code>openzero</code>函数实现。以及当我们左键点击某个格子时，如果其周围的已被标记格子数等于它表示的数字，则会打开周围未被标记的格子，这个功能应在<code>play</code>函数中完善。<br>此前先定义一个初始值为0的全局变量count哦~。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">openzero</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> board[ROW][COL])</span></span><br><span class="line"><span class="comment">// 方法2: void openzero(int x, int y, board[ROW + 2][COL + 2])</span></span><br><span class="line">&#123;</span><br><span class="line">board[x][y] -= <span class="number">20</span>;</span><br><span class="line">++count;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = x - <span class="number">1</span>; i &lt;= x + <span class="number">1</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = y - <span class="number">1</span>; j &lt;= y + <span class="number">1</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i != <span class="number">-1</span> &amp;&amp; i != ROW &amp;&amp; j != <span class="number">-1</span> &amp;&amp; j != COL &amp;&amp; board[i][j] &gt;= <span class="number">19</span> &amp;&amp; board[i][j] &lt;= <span class="number">28</span>) <span class="comment">// 不访问越界元素</span></span><br><span class="line">            <span class="comment">// 方法2: if(board[i][j] &gt;= 19 &amp;&amp; board[i][j] &lt;= 28)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[i][j] != <span class="number">20</span>) <span class="comment">// 打开的格子不为0 则直接打开</span></span><br><span class="line">&#123;</span><br><span class="line">board[i][j] -= <span class="number">20</span>;</span><br><span class="line">++count;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>                  <span class="comment">// 打开的格子为0 则继续调用openzero函数;</span></span><br><span class="line">&#123;</span><br><span class="line">openzero(i, j, board);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><code>play</code>函数就修改为<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">play</span><span class="params">(<span class="type">int</span> board[ROW][COL])</span></span><br><span class="line"><span class="comment">// 方法2: int play(int board[ROW + 2[COL + 2])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 定义一个消息</span></span><br><span class="line">ExMessage m;</span><br><span class="line"><span class="type">int</span> x, y; <span class="comment">// 接收鼠标消息的横纵坐标对应的数组下标</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">m = getmessage(EX_MOUSE); <span class="comment">// m接收鼠标消息</span></span><br><span class="line"><span class="keyword">switch</span> (m.message)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> WM_LBUTTONDOWN: <span class="comment">// 如果左键点击 翻开空白图片</span></span><br><span class="line">x = m.y / SIZE;         <span class="comment">// 对应的行标</span></span><br><span class="line"><span class="comment">//方法2: x = m.y / SIZE + 1;</span></span><br><span class="line">y = m.x / SIZE;         <span class="comment">// 对应的列标</span></span><br><span class="line"><span class="comment">//方法2: y = m.x / SIZE + 1;</span></span><br><span class="line"><span class="keyword">if</span> (board[x][y] &gt;= <span class="number">19</span> &amp;&amp; board[x][y] &lt;= <span class="number">28</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[x][y] == <span class="number">20</span>) <span class="comment">// 翻开为0的格子 调用openzero函数</span></span><br><span class="line">&#123;</span><br><span class="line">openzero(x, y, board);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">++count;</span><br><span class="line">board[x][y] -= <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (board[x][y] &gt;= <span class="number">1</span> &amp;&amp; board[x][y] &lt;= <span class="number">8</span>) <span class="comment">// 如果左键点击某个数字</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t_count = <span class="number">0</span>; <span class="comment">// 定义临时变量 t_count 计算周围被标记格子的数目</span></span><br><span class="line"><span class="type">int</span> flag = <span class="number">1</span>; <span class="comment">// 判断要打开的格子是否有雷的标志</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = x - <span class="number">1</span>; i &lt;= x + <span class="number">1</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = y - <span class="number">1</span>; j &lt;= y + <span class="number">1</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i != <span class="number">-1</span> &amp;&amp; i != ROW &amp;&amp; j != <span class="number">-1</span> &amp;&amp; j != COL &amp;&amp; board[i][j] &gt; <span class="number">30</span>) <span class="comment">// 如果不越界且被标记 t_count自加</span></span><br><span class="line">    <span class="comment">//方法2: if(board[i][j] &gt; 30)</span></span><br><span class="line">&#123;</span><br><span class="line">++t_count;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (t_count == board[x][y]) <span class="comment">// 被标记的格子数等于自身</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = x - <span class="number">1</span>; i &lt;= x + <span class="number">1</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = y - <span class="number">1</span>; j &lt;= y + <span class="number">1</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i != <span class="number">-1</span> &amp;&amp; i != ROW &amp;&amp; j != <span class="number">-1</span> &amp;&amp; j != COL &amp;&amp; board[i][j] &gt;= <span class="number">19</span> &amp;&amp; board[i][j] &lt;= <span class="number">28</span>)</span><br><span class="line"><span class="comment">//方法2: if(board[i][j] &gt;= 19 &amp;&amp; board[i][j] &lt;= 28)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 先看即将要打开的格子中是否有雷</span></span><br><span class="line"><span class="keyword">if</span> (board[i][j] == <span class="number">19</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">0</span>) <span class="comment">// 如果有雷 就将周围未被标记的所有雷打开 被标记的数字打开</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = x - <span class="number">1</span>; i &lt;= x + <span class="number">1</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = y - <span class="number">1</span>; j &lt;= y + <span class="number">1</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i != <span class="number">-1</span> &amp;&amp; i != ROW &amp;&amp; j != <span class="number">-1</span> &amp;&amp; j != COL &amp;&amp; board[i][j] == <span class="number">19</span>)</span><br><span class="line"><span class="comment">//方法2: if(board[i][j] == 19)</span></span><br><span class="line">&#123;</span><br><span class="line">board[i][j] -= <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i != <span class="number">-1</span> &amp;&amp; i != ROW &amp;&amp; j != <span class="number">-1</span> &amp;&amp; j != COL &amp;&amp; board[i][j] - <span class="number">50</span> &gt;= <span class="number">0</span> &amp;&amp; board[i][j] <span class="number">-50</span> &lt;= <span class="number">8</span>)</span><br><span class="line"><span class="comment">// 减50是因为 该格子未被打开 +20 被标记+30 </span></span><br><span class="line"><span class="comment">//方法2: if(board[i][j] - 50 &gt;= 0 &amp;&amp; board[i][j] - 50 &lt;= 8)</span></span><br><span class="line">&#123;</span><br><span class="line">board[i][j] -= <span class="number">50</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">1</span>) <span class="comment">// 如果没有雷 打开周围格子</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = x - <span class="number">1</span>; i &lt;= x + <span class="number">1</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = y - <span class="number">1</span>; j &lt;= y + <span class="number">1</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i != <span class="number">-1</span> &amp;&amp; i != ROW &amp;&amp; j != <span class="number">-1</span> &amp;&amp; j != COL &amp;&amp; board[i][j] &gt;= <span class="number">19</span> &amp;&amp; board[i][j] &lt;= <span class="number">28</span>)</span><br><span class="line"><span class="comment">//方法2: if(board[i][j] &gt;= 19 &amp;&amp; board[i][j] &lt;= 28)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[i][j] == <span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">openzero(i, j, board);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">++count;</span><br><span class="line">board[i][j] -= <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> board[x][y];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WM_RBUTTONDOWN: <span class="comment">// 如果右键点击 标记或取消标记</span></span><br><span class="line">x = m.y / SIZE; <span class="comment">// 对应的行标</span></span><br><span class="line"><span class="comment">//方法2: x = m.y / SIZE + 1;</span></span><br><span class="line">y = m.x / SIZE; <span class="comment">// 对应的列标</span></span><br><span class="line"><span class="comment">//方法2: y = m.x / SIZE + 1;</span></span><br><span class="line"><span class="keyword">if</span> (board[x][y] &gt;= <span class="number">19</span> &amp;&amp; board[x][y] &lt;= <span class="number">28</span>)</span><br><span class="line">&#123;</span><br><span class="line">board[x][y] += <span class="number">30</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (board[x][y] &gt; <span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line">board[x][y] -= <span class="number">30</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> board[x][y];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><code>main</code>函数则改变为(去掉加号):<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">HWND hwnd = initgraph(<span class="number">500</span>, <span class="number">500</span>, SHOWCONSOLE); <span class="comment">// 初始化图形窗口，大小为500*500，其原点在左上角，x轴向右为正，y轴向下为正</span></span><br><span class="line">loadimage(&amp;img[<span class="number">0</span>], <span class="string">L&quot;0.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字0</span></span><br><span class="line">loadimage(&amp;img[<span class="number">1</span>], <span class="string">L&quot;1.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字1</span></span><br><span class="line">loadimage(&amp;img[<span class="number">2</span>], <span class="string">L&quot;2.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字2</span></span><br><span class="line">loadimage(&amp;img[<span class="number">3</span>], <span class="string">L&quot;3.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字3</span></span><br><span class="line">loadimage(&amp;img[<span class="number">4</span>], <span class="string">L&quot;4.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字4</span></span><br><span class="line">loadimage(&amp;img[<span class="number">5</span>], <span class="string">L&quot;5.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字5</span></span><br><span class="line">loadimage(&amp;img[<span class="number">6</span>], <span class="string">L&quot;6.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字6</span></span><br><span class="line">loadimage(&amp;img[<span class="number">7</span>], <span class="string">L&quot;7.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字7</span></span><br><span class="line">loadimage(&amp;img[<span class="number">8</span>], <span class="string">L&quot;8.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字8</span></span><br><span class="line">loadimage(&amp;img[<span class="number">9</span>], <span class="string">L&quot;9.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 雷</span></span><br><span class="line">loadimage(&amp;img[<span class="number">10</span>], <span class="string">L&quot;10.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 未打开时的方块图片</span></span><br><span class="line">loadimage(&amp;img[<span class="number">11</span>], <span class="string">L&quot;11.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 标记</span></span><br><span class="line"><span class="type">int</span> board[ROW][COL]; <span class="comment">// 如果是方法2，将其改为int board[ROW + 2][COL + 2]</span></span><br><span class="line">game_init(board);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">game_print(board);</span><br><span class="line"><span class="keyword">if</span> (play(board) == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">game_print(board);</span><br><span class="line">MessageBox(hwnd, <span class="string">L&quot;you have losted!&quot;</span>, <span class="string">L&quot;&quot;</span>, MB_OK);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">+<span class="keyword">if</span> (ROW * COL - NUM == count)</span><br><span class="line">+&#123;</span><br><span class="line">+game_print(board);</span><br><span class="line">+MessageBox(hwnd, <span class="string">L&quot;you succeed!&quot;</span>, <span class="string">L&quot;&quot;</span>, MB_OK);</span><br><span class="line">+<span class="keyword">break</span>;</span><br><span class="line">+&#125;</span><br><span class="line">&#125;</span><br><span class="line">closegraph(); <span class="comment">// 关闭图形化窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="2-6-播放音乐"><a href="#2-6-播放音乐" class="headerlink" title="2.6 播放音乐"></a>2.6 播放音乐</h3><p>我们现在引入头文件的地方添加这个指令<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;graphics.h&gt;</span> <span class="comment">// 这个头文件包含easyx的相关函数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line">+ <span class="meta">#<span class="keyword">pragma</span> comment(lib,<span class="string">&quot;winmm.lib&quot;</span>) <span class="comment">// 引用winmm链接库</span></span></span><br><span class="line"><span class="comment">// 相关宏定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROW 10 <span class="comment">// 棋盘的行数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COL 10 <span class="comment">// 棋盘的列数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NUM 10 <span class="comment">// 棋盘的雷数 #define SIZE 50 // 图片的大小 这里定义为50*50</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SIZE 50 <span class="comment">// 图片的大小</span></span></span><br></pre></td></tr></table></figure></p><p><code>main</code>函数改为:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">HWND hwnd = initgraph(<span class="number">500</span>, <span class="number">500</span>, SHOWCONSOLE); <span class="comment">// 初始化图形窗口，大小为500*500，其原点在左上角，x轴向右为正，y轴向下为正</span></span><br><span class="line">loadimage(&amp;img[<span class="number">0</span>], <span class="string">L&quot;0.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字0</span></span><br><span class="line">loadimage(&amp;img[<span class="number">1</span>], <span class="string">L&quot;1.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字1</span></span><br><span class="line">loadimage(&amp;img[<span class="number">2</span>], <span class="string">L&quot;2.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字2</span></span><br><span class="line">loadimage(&amp;img[<span class="number">3</span>], <span class="string">L&quot;3.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字3</span></span><br><span class="line">loadimage(&amp;img[<span class="number">4</span>], <span class="string">L&quot;4.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字4</span></span><br><span class="line">loadimage(&amp;img[<span class="number">5</span>], <span class="string">L&quot;5.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字5</span></span><br><span class="line">loadimage(&amp;img[<span class="number">6</span>], <span class="string">L&quot;6.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字6</span></span><br><span class="line">loadimage(&amp;img[<span class="number">7</span>], <span class="string">L&quot;7.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字7</span></span><br><span class="line">loadimage(&amp;img[<span class="number">8</span>], <span class="string">L&quot;8.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字8</span></span><br><span class="line">loadimage(&amp;img[<span class="number">9</span>], <span class="string">L&quot;9.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 雷</span></span><br><span class="line">loadimage(&amp;img[<span class="number">10</span>], <span class="string">L&quot;10.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 未打开时的方块图片</span></span><br><span class="line">loadimage(&amp;img[<span class="number">11</span>], <span class="string">L&quot;11.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 标记</span></span><br><span class="line">mciSendString(<span class="string">L&quot;open start.mp3 alias music&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>); </span><br><span class="line">mciSendString(<span class="string">L&quot;play music repeat&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="type">int</span> board[ROW][COL]; <span class="comment">// 如果是方法2，将其改为int board[ROW + 2][COL + 2]</span></span><br><span class="line">game_init(board);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">game_print(board);</span><br><span class="line"><span class="keyword">if</span> (play(board) == <span class="number">-1</span>) <span class="comment">//判断失败</span></span><br><span class="line">&#123;</span><br><span class="line">game_print(board);</span><br><span class="line">MessageBox(hwnd, <span class="string">L&quot;you have losted!&quot;</span>, <span class="string">L&quot;&quot;</span>, MB_OK);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ROW * COL - NUM == count) <span class="comment">//判断胜利</span></span><br><span class="line">&#123;</span><br><span class="line">game_print(board);</span><br><span class="line">MessageBox(hwnd, <span class="string">L&quot;you succeed!&quot;</span>, <span class="string">L&quot;&quot;</span>, MB_OK);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">closegraph(); <span class="comment">// 关闭图形化窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>以上的<code>micSendString</code>函数就是播放音乐的函数了，我这里播放的是之前添加到项目文件中的<code>start.mp3</code>音乐，其中第一次调用(打开音乐)时的<code>alias music</code>是指将音乐重命名为<code>music</code>,第二次调用函数(播放音乐)中的<code>repeat</code>是指循环播放。你也可以选择你喜欢的音乐播放，只需要按照之前的方法将音乐文件添加到项目文件中并正确调用函数即可。</p><h2 id="3-完整代码和效果显示"><a href="#3-完整代码和效果显示" class="headerlink" title="3. 完整代码和效果显示"></a>3. 完整代码和效果显示</h2><p>完整代码如下(再次提醒:代码需要在.cpp文件才能运行，不是.c文件):<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;graphics.h&gt;</span> <span class="comment">// 这个头文件包含easyx的相关函数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib,<span class="string">&quot;winmm.lib&quot;</span>)</span></span><br><span class="line"><span class="comment">// 相关宏定义</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROW 10 <span class="comment">// 棋盘的行数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COL 10 <span class="comment">// 棋盘的列数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NUM 10 <span class="comment">// 棋盘的雷数 #define SIZE 50 // 图片的大小 这里定义为50*50</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SIZE 50 <span class="comment">// 图片的大小</span></span></span><br><span class="line">IMAGE img[<span class="number">12</span>];  <span class="comment">// 创建12个图像对象</span></span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">game_init</span><span class="params">(<span class="type">int</span> board[ROW][COL])</span></span><br><span class="line"><span class="comment">// 方法2: void game_init(int board[ROW + 2][COL + 2])</span></span><br><span class="line">&#123;</span><br><span class="line">srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>)); <span class="comment">// 初始化随机数种子</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ROW; ++i)</span><br><span class="line"><span class="comment">//方法2: for (int i = 0; i &lt; ROW + 2; ++i)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; COL; ++j)</span><br><span class="line"><span class="comment">//方法2: for (int j = 0; j &lt; COL + 2; ++j)</span></span><br><span class="line">&#123;</span><br><span class="line">board[i][j] = <span class="number">0</span>; <span class="comment">// 所有元素赋值为0</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; NUM; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = rand() % ROW; <span class="comment">// 雷的行标 取值0~row-1</span></span><br><span class="line"><span class="comment">//方法2: int x = rand() % ROW + 1</span></span><br><span class="line"><span class="type">int</span> y = rand() % COL; <span class="comment">// 雷的列标 取值0~col-1</span></span><br><span class="line"><span class="comment">//方法2: int y = rand() % COL + 1</span></span><br><span class="line"><span class="keyword">if</span> (board[x][y] != <span class="number">-1</span>) <span class="comment">// 避免多次将同一个位置赋值为-1</span></span><br><span class="line">&#123;</span><br><span class="line">board[x][y] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">--i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ROW; ++i)</span><br><span class="line"><span class="comment">//方法2: for (int i = 1; i &lt;= ROW; ++i)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; COL; ++j) <span class="comment">// 计算某个格子周围雷的个数</span></span><br><span class="line"><span class="comment">//方法2: for (int j = 1; j &lt;= COL; ++j)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> m = i - <span class="number">1</span>; m &lt;= i + <span class="number">1</span>; ++m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> n = j - <span class="number">1</span>; n &lt;= j + <span class="number">1</span>; ++n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[i][j] != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m != <span class="number">-1</span> &amp;&amp; m != ROW &amp;&amp; n != <span class="number">-1</span> &amp;&amp; n != COL &amp;&amp; board[m][n] == <span class="number">-1</span>)</span><br><span class="line"><span class="comment">// 一旦某个行标或列标越界，则短路特性不会引起数组越界访问</span></span><br><span class="line"><span class="comment">// 方法2: if( board[m][n] != -1)</span></span><br><span class="line">&#123;</span><br><span class="line">++board[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ROW; ++i)</span><br><span class="line"><span class="comment">//方法2: for (int i = 1; i &lt;= ROW; ++i)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; COL; ++j)</span><br><span class="line"><span class="comment">//方法2: for (int j = 1; j &lt;= COL; ++j&gt;)</span></span><br><span class="line">&#123;</span><br><span class="line">board[i][j] += <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">game_print</span><span class="params">(<span class="type">int</span> board[ROW][COL])</span></span><br><span class="line"><span class="comment">// 方法2: void game_print(int board[ROW + 2][COL + 2])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ROW; ++i)</span><br><span class="line"><span class="comment">// 方法2: for (int i = 1; i &lt;= ROW; ++i)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; COL; ++j)</span><br><span class="line"><span class="comment">// 方法2: for (int j = 1; j &lt;= COL; ++j)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%2d &quot;</span>, board[i][j]);</span><br><span class="line"><span class="keyword">if</span> (board[i][j] == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">putimage(j * SIZE, i * SIZE, &amp;img[<span class="number">9</span>]); <span class="comment">// 如果是雷 则加载雷图片</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (board[i][j] &gt;= <span class="number">0</span> &amp;&amp; board[i][j] &lt;= <span class="number">8</span>)</span><br><span class="line">&#123;</span><br><span class="line">putimage(j * SIZE, i * SIZE, &amp;img[board[i][j]]); <span class="comment">// 如果不是雷 则加载数字</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (board[i][j] &gt;= <span class="number">19</span> &amp;&amp; board[i][j] &lt;= <span class="number">28</span>)</span><br><span class="line">&#123;</span><br><span class="line">putimage(j * SIZE, i * SIZE, &amp;img[<span class="number">10</span>]); <span class="comment">// 未点开方块时 则加载空白方块</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (board[i][j] &gt; <span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line">putimage(j * SIZE, i * SIZE, &amp;img[<span class="number">11</span>]); <span class="comment">// 右键点击 则加载旗帜图片</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">openzero</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> board[ROW][COL])</span></span><br><span class="line"><span class="comment">// 方法2: void openzero(int x, int y, board[ROW + 2][COL + 2])</span></span><br><span class="line">&#123;</span><br><span class="line">board[x][y] -= <span class="number">20</span>;</span><br><span class="line">++count;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = x - <span class="number">1</span>; i &lt;= x + <span class="number">1</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = y - <span class="number">1</span>; j &lt;= y + <span class="number">1</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i != <span class="number">-1</span> &amp;&amp; i != ROW &amp;&amp; j != <span class="number">-1</span> &amp;&amp; j != COL &amp;&amp; board[i][j] &gt;= <span class="number">19</span> &amp;&amp; board[i][j] &lt;= <span class="number">28</span>) <span class="comment">// 不访问越界元素</span></span><br><span class="line"><span class="comment">// 方法2: if(board[i][j] &gt;= 19 &amp;&amp; board[i][j] &lt;= 28)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[i][j] != <span class="number">20</span>) <span class="comment">// 打开的格子不为0 则直接打开</span></span><br><span class="line">&#123;</span><br><span class="line">board[i][j] -= <span class="number">20</span>;</span><br><span class="line">++count;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>                  <span class="comment">// 打开的格子为0 则继续调用openzero函数;</span></span><br><span class="line">&#123;</span><br><span class="line">openzero(i, j, board);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">play</span><span class="params">(<span class="type">int</span> board[ROW][COL])</span></span><br><span class="line"><span class="comment">// 方法2: int play(int board[ROW + 2[COL + 2])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 定义一个消息</span></span><br><span class="line">ExMessage m;</span><br><span class="line"><span class="type">int</span> x, y; <span class="comment">// 接收鼠标消息的横纵坐标对应的数组下标</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">m = getmessage(EX_MOUSE); <span class="comment">// m接收鼠标消息</span></span><br><span class="line"><span class="keyword">switch</span> (m.message)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> WM_LBUTTONDOWN: <span class="comment">// 如果左键点击 翻开空白图片</span></span><br><span class="line">x = m.y / SIZE;         <span class="comment">// 对应的行标</span></span><br><span class="line"><span class="comment">//方法2: x = m.y / SIZE + 1;</span></span><br><span class="line">y = m.x / SIZE;         <span class="comment">// 对应的列标</span></span><br><span class="line"><span class="comment">//方法2: y = m.x / SIZE + 1;</span></span><br><span class="line"><span class="keyword">if</span> (board[x][y] &gt;= <span class="number">19</span> &amp;&amp; board[x][y] &lt;= <span class="number">28</span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[x][y] == <span class="number">20</span>) <span class="comment">// 翻开为0的格子 调用openzero函数</span></span><br><span class="line">&#123;</span><br><span class="line">openzero(x, y, board);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">++count;</span><br><span class="line">board[x][y] -= <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (board[x][y] &gt;= <span class="number">1</span> &amp;&amp; board[x][y] &lt;= <span class="number">8</span>) <span class="comment">// 如果左键点击某个已被打开数字</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t_count = <span class="number">0</span>; <span class="comment">// 定义临时变量 t_count 计算周围被标记格子的数目</span></span><br><span class="line"><span class="type">int</span> flag = <span class="number">1</span>; <span class="comment">// 判断要打开的格子是否有雷的标志 有雷则将其赋值为0</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = x - <span class="number">1</span>; i &lt;= x + <span class="number">1</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = y - <span class="number">1</span>; j &lt;= y + <span class="number">1</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i != <span class="number">-1</span> &amp;&amp; i != ROW &amp;&amp; j != <span class="number">-1</span> &amp;&amp; j != COL &amp;&amp; board[i][j] &gt; <span class="number">30</span>) <span class="comment">// 如果不越界且被标记 t_count自加</span></span><br><span class="line"><span class="comment">//方法2: if(board[i][j] &gt; 30)</span></span><br><span class="line">&#123;</span><br><span class="line">++t_count;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (t_count == board[x][y]) <span class="comment">// 被标记的格子数等于自身</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = x - <span class="number">1</span>; i &lt;= x + <span class="number">1</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = y - <span class="number">1</span>; j &lt;= y + <span class="number">1</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i != <span class="number">-1</span> &amp;&amp; i != ROW &amp;&amp; j != <span class="number">-1</span> &amp;&amp; j != COL &amp;&amp; board[i][j] &gt;= <span class="number">19</span> &amp;&amp; board[i][j] &lt;= <span class="number">28</span>)</span><br><span class="line"><span class="comment">//方法2: if(board[i][j] &gt;= 19 &amp;&amp; board[i][j] &lt;= 28)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 先看即将要打开的格子中是否有雷</span></span><br><span class="line"><span class="keyword">if</span> (board[i][j] == <span class="number">19</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">0</span>; <span class="comment">// 有雷赋值为0</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">0</span>) <span class="comment">// 如果有雷 就将周围未被标记的所有雷打开 被标记的数字打开</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = x - <span class="number">1</span>; i &lt;= x + <span class="number">1</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = y - <span class="number">1</span>; j &lt;= y + <span class="number">1</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i != <span class="number">-1</span> &amp;&amp; i != ROW &amp;&amp; j != <span class="number">-1</span> &amp;&amp; j != COL &amp;&amp; board[i][j] == <span class="number">19</span>)</span><br><span class="line"><span class="comment">//方法2: if(board[i][j] == 19)</span></span><br><span class="line">&#123;</span><br><span class="line">board[i][j] -= <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i != <span class="number">-1</span> &amp;&amp; i != ROW &amp;&amp; j != <span class="number">-1</span> &amp;&amp; j != COL &amp;&amp; board[i][j] - <span class="number">50</span> &gt;= <span class="number">0</span> &amp;&amp; board[i][j] - <span class="number">50</span> &lt;= <span class="number">8</span>)</span><br><span class="line"><span class="comment">// 减50是因为 该格子未被打开 +20 被标记+30 </span></span><br><span class="line"><span class="comment">//方法2: if(board[i][j] - 50 &gt;= 0 &amp;&amp; board[i][j] - 50 &lt;= 8)</span></span><br><span class="line">&#123;</span><br><span class="line">board[i][j] -= <span class="number">50</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>; <span class="comment">// 返回-1表示游戏失败</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">1</span>) <span class="comment">// 如果没有雷 打开周围格子</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = x - <span class="number">1</span>; i &lt;= x + <span class="number">1</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = y - <span class="number">1</span>; j &lt;= y + <span class="number">1</span>; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i != <span class="number">-1</span> &amp;&amp; i != ROW &amp;&amp; j != <span class="number">-1</span> &amp;&amp; j != COL &amp;&amp; board[i][j] &gt;= <span class="number">19</span> &amp;&amp; board[i][j] &lt;= <span class="number">28</span>)</span><br><span class="line"><span class="comment">//方法2: if(board[i][j] &gt;= 19 &amp;&amp; board[i][j] &lt;= 28)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (board[i][j] == <span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">openzero(i, j, board);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">++count;</span><br><span class="line">board[i][j] -= <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> board[x][y];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WM_RBUTTONDOWN: <span class="comment">// 如果右键点击 标记或取消标记</span></span><br><span class="line">x = m.y / SIZE; <span class="comment">// 对应的行标</span></span><br><span class="line"><span class="comment">//方法2: x = m.y / SIZE + 1;</span></span><br><span class="line">y = m.x / SIZE; <span class="comment">// 对应的列标</span></span><br><span class="line"><span class="comment">//方法2: y = m.x / SIZE + 1;</span></span><br><span class="line"><span class="keyword">if</span> (board[x][y] &gt;= <span class="number">19</span> &amp;&amp; board[x][y] &lt;= <span class="number">28</span>)</span><br><span class="line">&#123;</span><br><span class="line">board[x][y] += <span class="number">30</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (board[x][y] &gt; <span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line">board[x][y] -= <span class="number">30</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> board[x][y];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">HWND hwnd = initgraph(<span class="number">500</span>, <span class="number">500</span>, SHOWCONSOLE); <span class="comment">// 初始化图形窗口，大小为500*500，其原点在左上角，x轴向右为正，y轴向下为正</span></span><br><span class="line">loadimage(&amp;img[<span class="number">0</span>], <span class="string">L&quot;0.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字0</span></span><br><span class="line">loadimage(&amp;img[<span class="number">1</span>], <span class="string">L&quot;1.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字1</span></span><br><span class="line">loadimage(&amp;img[<span class="number">2</span>], <span class="string">L&quot;2.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字2</span></span><br><span class="line">loadimage(&amp;img[<span class="number">3</span>], <span class="string">L&quot;3.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字3</span></span><br><span class="line">loadimage(&amp;img[<span class="number">4</span>], <span class="string">L&quot;4.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字4</span></span><br><span class="line">loadimage(&amp;img[<span class="number">5</span>], <span class="string">L&quot;5.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字5</span></span><br><span class="line">loadimage(&amp;img[<span class="number">6</span>], <span class="string">L&quot;6.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字6</span></span><br><span class="line">loadimage(&amp;img[<span class="number">7</span>], <span class="string">L&quot;7.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字7</span></span><br><span class="line">loadimage(&amp;img[<span class="number">8</span>], <span class="string">L&quot;8.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 数字8</span></span><br><span class="line">loadimage(&amp;img[<span class="number">9</span>], <span class="string">L&quot;9.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 雷</span></span><br><span class="line">loadimage(&amp;img[<span class="number">10</span>], <span class="string">L&quot;10.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 未打开时的方块图片</span></span><br><span class="line">loadimage(&amp;img[<span class="number">11</span>], <span class="string">L&quot;11.jpg&quot;</span>, SIZE, SIZE); <span class="comment">// 标记</span></span><br><span class="line">mciSendString(<span class="string">L&quot;open start.mp3 alias music&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">mciSendString(<span class="string">L&quot;play music repeat&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="type">int</span> board[ROW][COL]; <span class="comment">// 如果是方法2，将其改为int board[ROW + 2][COL + 2]</span></span><br><span class="line">game_init(board);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">game_print(board);</span><br><span class="line"><span class="keyword">if</span> (play(board) == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">game_print(board);</span><br><span class="line">MessageBox(hwnd, <span class="string">L&quot;you have losted!&quot;</span>, <span class="string">L&quot;&quot;</span>, MB_OK);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ROW * COL - NUM == count)</span><br><span class="line">&#123;</span><br><span class="line">game_print(board);</span><br><span class="line">MessageBox(hwnd, <span class="string">L&quot;you succeed!&quot;</span>, <span class="string">L&quot;&quot;</span>, MB_OK);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">closegraph(); <span class="comment">// 关闭图形化窗口</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>部分效果如图:<br><img src="/img/6.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小游戏 编程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
